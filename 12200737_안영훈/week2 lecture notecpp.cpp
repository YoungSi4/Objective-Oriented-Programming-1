// C++은 절차지향적, 객체지향적, 컴파일 언어
// 
// vs studio 환경에서 할 예정.
// 
// 데이터의 흐름
// 표준 출력 장치(모니터) << cout << "출력할 내용;
// 표준 입력 장치(키보드) >> cin >> 입력 받을 변수;
// 
// 리터럴?
// 우리가 직접 적는 값을 말함.
// 한 줄에서 실행되고 나면 바로 지워진다
// 그래서 변수에 담아서 사용
// 
// 데이터타입
// int 정수
// float double 실수 -> double이 cpp는 기본형이다.
// 
// signed unsigned 타입
// 첫 자리가 1이면 - 0이면 + == signed (기본값)
// 그냥 전체가 숫자 == unsigned (따로 설정해주어야 함)
// 
// signed는 +- 21억 정도
// unsigned는 0 ~ 42억 정도
// 나중에 오버플로우를 이해하기 좋다
// 
// char 타입은 ASCII 코드를 기반으로 하는 자료형이다
// 따라서 숫자로 저장되어 있고, 이걸 char 형태로 해석하면 문자가 나온다
// A = 65 a = 97 정도만 알고 있자
// 
// bool 타입은 논리형. True(1) False(0) 를 저장하는데
// 실제로 저장되는 값은 0 1
// true false로 입력할 수 있는데 기본적으로 가독성을 위해서이다.
// 0만 false고 이외의 모든 값은 true로 인식한다
// 
// 특이한 점은 cin으로 입력받을 때 true false를 사용하지 못 한다
// 0과 그렇지 않은 값으로 인식해서 true false를 구분한다.
// 
// 부동소수점
// 첫 1비트: 부호 +-
// 그 다음 8비트: 00000000 = -127 (10^-127) ~ 1000000 = 1 (10^1) ~ 11111111 - 128 (10^128)
// 그 다음 23비트: 유효 숫자
// >> 0 10000000 010110000 ... 000
// >> + 10^1	 1.01011
// >> 1.01011 * 10 ^ 1 => 1.01011e1 (과학적 표기법)
// 
// void와 null은 다르다.
// void는 아무런 리턴값을 가지지 않는다를 명시
// null은 null 외엔 아무런 내용이 없다. null도 없다는 뜻임.
// 
// string 타입은 <string> 헤더를 읽어와야 하긴 하는데
// <iostream> 일부가 포함되어 기본적으로 조금은 쓸 수 있다.
// 
// 
