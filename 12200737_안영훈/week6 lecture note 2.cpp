// 6주차 강의 - 2 . 함수 이어서

// return
// 함수가 돌려주는 값.
// 주의: return을 만나는 순간 함수는 종료된다.
// 함수 헤더에 적어주는 자료형은 리턴타입과 동일해야 한다.
// 반환하는 데이터가 없으면?
// void를 쓰면 된다. 이때는 return; 으로 적으면 됨
// 
// - void 함수
// 
// 
// reference type
// 참조자
// 
// int a = 5;
// int& r = a; int형 레퍼런스 타입
// 기존 변수에 새로운 이름을 붙이는 것,
// 별명!
// 
// reference는 언제 필요할까?
// 둘이 스코프가 다를 때
// 
// 매개변수로 하면 값을 복사해서 전달한다.
// 혹은 함수 공간에 변수 이름만 만들어두고
// 그 값을 사용
// 
// 주의: 자료형이 동일해야 한다.
// 주의2: 포인터를 생성할 때 지정한 공간 외엔
// 다른 건 지정 불가.
// 초기활 할 때 외엔 수정 불가능
// 
// int a = 5;
// n=dmo
// 
// 
// 
// 
// pass - by value
// 복사
// 값 복사. 원본 값은 그대로
// 
// pass - by reference (포인터는 기능은 유사한데, 문법이 다름)
// 참조
// 
// 
// 연산 효율?
// pass by value 는 값을 복사한다.
// 값의 복사는 절대 꽁짜가 아니다.
// 
// pass by reference
// 이름표만 달아서 함.
// 연산은 유리함.
// 
// 나중가면 기본타입이 아닌 걸 더 쓰게 된다.
// 
// 기본 타입이 아닌 모든 건 pass by reference (STL)
// 
// 
// 
// swap 함수.
// 
//
//